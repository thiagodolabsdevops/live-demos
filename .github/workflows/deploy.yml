name: Build and Deploy to AWS ECS Fargate

on:
  workflow_dispatch:

env:
  container-name: my-app
  cluster: my-app-cluster
  service: my-app-service
  task-definition: my-app-task

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Docker image

      id: build-image
      run: |
        # Define ECR image name and tag
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.container-name }}:latest"
        
        # Build and push the Docker image
        docker buildx build --platform linux/amd64 --push -t $IMAGE_URI .
        
        # Output image URI
        echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        image: ${{ env.IMAGE_URI }}
        container-name: ${{ env.container-name }}
        cluster: ${{ env.cluster }}
        service: ${{ env.service }}
        task-definition: ${{ env.task-definition }}