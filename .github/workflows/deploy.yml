name: Build and Deploy to AWS ECS Fargate

on:
  workflow_dispatch:

env:
  container-name: my-app
  cluster: my-app-cluster
  service: my-app-service
  task-definition: task-definition.json

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Get Git commit hash
      id: git-commit
      run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Docker image
      id: build-image
      run: |
        # Define ECR image name and tags
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.container-name }}"
        LATEST_TAG="${IMAGE_URI}:latest"
        COMMIT_TAG="${IMAGE_URI}:${{ env.COMMIT_HASH }}"
        
        # Build and push the Docker image with both tags
        docker buildx build --platform linux/amd64 --push -t $LATEST_TAG -t $COMMIT_TAG .
        
        # Output image URIs
        echo "LATEST_IMAGE_URI=${LATEST_TAG}" >> $GITHUB_ENV
        echo "COMMIT_IMAGE_URI=${COMMIT_TAG}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.4

    - name: Plan Terraform changes
      working-directory: terraform
      run: |
        terraform init
        terraform plan -var "commit_hash=${{ env.COMMIT_HASH }}"

    - name: Apply Terraform changes
      working-directory: terraform
      run: terraform apply -auto-approve -var "commit_hash=${{ env.COMMIT_HASH }}"
